name: Deploy preprod
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: "read"
  id-token: "write"
jobs:
  build-dev:
    if: github.event.pull_request.draft == false
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # ratchet:actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Bygg med maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml

      - name: Bygg og push docker image
        if: github.event.pull_request.draft == false && github.event.pull_request.user.login != 'dependabot[bot]'
        uses: nais/docker-build-push@791ebb6f74b82849c742a9bc9c97abe44c6c111f # ratchet:nais/docker-build-push@v0
        id: docker-push
        with:
          team: teamfamilie
          tag: latest
          byosbom: target/classes/META-INF/sbom/application.cdx.json
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy-dev:
    if: github.event.pull_request.draft == false && github.event.pull_request.user.login != 'dependabot[bot]'
    name: Deploy to dev-fss
    needs: build-dev
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Deploy til dev-fss team namespace
        uses: nais/deploy/actions/deploy@655191e618af58744d594ab4226aeac78dc739ec # ratchet:nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: app-preprod.teamfamilie.yaml
          VAR: image=${{ needs.build-dev.outputs.image }}
